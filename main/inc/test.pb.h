/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Sat Feb 23 20:46:53 2019. */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Testing {
    int32_t wearout_count;
/* @@protoc_insertion_point(struct:Testing) */
} Testing;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Testing_init_default                     {0}
#define Testing_init_zero                        {0}

/* Field tags (for use in manual encoding/decoding) */
#define Testing_wearout_count_tag                1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Testing_fields[2];

/* Maximum encoded size of messages (where known) */
#define Testing_size                             11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
